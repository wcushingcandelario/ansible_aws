---

- name: Build an environment
  hosts: localhost
  connection: local
  tasks:
    - debug: msg='Building Clustered'
      when: clustered_environment

    - debug: msg='Building Single'
      when: not clustered_environment

- name: Create RDS
  connection: local
  hosts: localhost
  roles:
    - create_rds
  tags:
    - rds

- name: Set universal facts
  connection: local
  hosts: localhost
  tasks:
    - set_fact:
        new_lc_name: "lc-{{ deploy_type }}-{{ ansible_date_time.epoch }}_config"
        asg_name: "{{ deploy_type }}_autoscale"

- name: Build Promo Engine
  connection: local
  hosts: localhost
  roles:
    - promo_engine
  tags:
    - tagged
    - promo_engine

- name: Build Inventory Manager
  connection: local
  hosts: localhost
  roles:
    - inventory_manager
  tags:
    - tagged
    - inventory_manager

- name: Launch Mongo Cloud Manager environment
  connection: local
  hosts: localhost
  roles:
    - find_ovc_ami
    - launch_instance
  vars:
    instance_type: ""{{ instance_type_mongo }}
    ami_role: 'mongo_ami'
    ami_region: "{{ region }}"
    launch_exact_count: "{{ mongo_instance_count }}"
    launch_tag_role: 'mongo'
    launch_tag_name: "mongo-{{ deploy_type }}.{{ dns_domain }}"
  tags:
    - mongodb_cm

- name: Configure Mongo Cloud Manager environment
  hosts: mongo_hosts
  roles:
    - mongodb_cm
  tags:
    - mongodb_cm


- name: Find AMI ID
  hosts: localhost
  connection: local
  roles:
    -  { role: find_ovc_ami, ami_region: "{{ region }}" }
  tags:
    - asg
    - find_ovc_ami
    - launch_ami
    - mongodb_cm

- name: Add AMI ID to facts
  hosts: localhost
  connection: local
  tasks:
    - name: Use set_fact to AMI
      set_fact:
        image_id: "{{ ami_find.results[0].ami_id }}"
      when: image_id is undefined and ami_find.results is defined
    - name: Use set_fact to AMI
      set_fact:
        image_id: BAD_AMI_ID__LOOKUP_FAILED
      when: image_id is undefined and ami_find.results is undefined
  tags:
    - asg
    - find_ovc_ami
    - launch_ami
    - mongodb_cm

- hosts: localhost
  connection: local
  tasks:
    - name: Display new AMI ID
      debug:
        msg="{{deploy_type}} will now be launched with {{ image_id }}"
    - name: Present new AMI ID
      pause:
        prompt: "{{deploy_type}} will now be launched with {{ image_id }}"
        seconds: 30

- name: Launch New Instance
  hosts: localhost
  connection: local
  roles:
    - { role: launch_instance, when: not clustered_environment }
  vars:
    instance_type: ""{{ instance_type_single }}
  tags:
    - launch_ami
    - mongodb_cm

- hosts: just_baked
  remote_user: ec2-user
  become: yes
  become_user: root
  gather_facts: true
  roles:
    - mongodb_cm
  tags:
    - mongodb_cm

- name: Create ELB and ASG
  hosts: localhost
  connection: local
  roles:
    - { role: create-elb-pos, when: clustered_environment }
    - { role: create-elb-dash, when: clustered_environment }
    - { role: create-auto, when: clustered_environment }
  vars:
    deploy_pos: "{{ deploy_type }}-POS"
    deploy_dash: "{{ deploy_type }}-Dash"
  tags:
    - asg
