---

- name: Create RDS
  connection: local
  hosts: localhost
  roles:
    - create_rds
  tags:
    - rds

- name: Find Mongo AMI ID
  hosts: localhost
  connection: local
  roles:
    - findovcami
  tags:
    - find_mongo_ami
    - mongo

- name: Add Mongo AMI ID to facts
  hosts: localhost
  connection: local
  tasks:
    - name: Use set_fact to AMI
      set_fact:
        mongo_image_id: "{{ ami_find.results[0].ami_id }}"
      when: monog_image_id is undefined
  tags:
    - find_mongo_ami
    - mongo

- name: Build Mongo Single Instance
  hosts: localhost
  connection: local
  tasks:
    - name: Display new Mongo AMI ID
      debug:
        msg="{{deploy_type}} Mongo will now be launched with {{ mongo_image_id }}"
    - name: Present new AMI Mongo ID
      pause:
        prompt: "{{deploy_type}} Mongo will now be launched with {{ mongo_image_id }}"
        seconds: 30
    - name: Launch Mongo instance
      ec2:
        assign_public_ip: yes
        region: "{{ region }}"
        key_name: "{{ key }}"
        group_id: "{{ mongo_security_groups }}"
        instance_type: "{{ mongo_instance_type }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        image: "{{ mongo_image_id }}"
        instance_profile_name: {{ IAMROLE }}
        user_data: "{{ lookup('file', 'scripts/mongo_user_data.sh') }}"
        termination_protection: yes
        wait: yes
        wait_timeout: 500
        exact_count: 1
        count_tag:
          Name: "mongodb-{{ deploy_type }}.{{ dns_domain }}"
          role: mongodb
          environment: "{{ deploy_type }}"
        instance_tags:
          Name: "mongodb-{{ deploy_type }}.{{ dns_domain }}"
          role: mongodb
          environment: "{{ deploy_type }}"
      register: mongo_ami_instance
    - name: Display Mongo AMI Instance Details
      debug:
        msg="{{ami_instance}}"
    - name: Add or Update Mongo Route53 entry
      route53:
        command: "create"
        zone: "{{ dns_domain }}"
        hosted_zone_id: "{{ dns_zone_id }}"
        private_zone: "true"
        record: "mongodb-{{ deploy_type }}.{{ dns_domain }}"
        type: "A"
        ttl: 300
        value: "{{ mongo_ami_instance.tagged_instances[0].private_ip }}"
        overwrite: "yes"
      tags:
        - dns
  tags:
    - mongo
    - tagged


- name: Find AMI ID
  hosts: localhost
  connection: local
  roles:
    - findovcami
  tags:
    - find_ovc_ami
    - launch_ami

- name: Add AMI ID to facts
  hosts: localhost
  connection: local
  tasks:
    - name: Use set_fact to AMI
      set_fact:
        image_id: "{{ ami_find.results[0].ami_id }}"
      when: image_id is undefined
  tags:
    - find_ovc_ami
    - launch_ami


- name: Launch New Instance
  hosts: localhost
  connection: local
  tasks:
    - name: Display new AMI ID
      debug:
        msg="{{deploy_type}} will now be launched with {{ image_id }}"
    - name: Present new AMI ID
      pause:
        prompt: "{{deploy_type}} will now be launched with {{ image_id }}"
        seconds: 30
    - name: Launch instance
      ec2:
        assign_public_ip: yes
        region: "{{ region }}"
        key_name: "{{ key }}"
        group_id: "{{ group_id }}"
        instance_type: "{{ instance_type_single }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        image: "{{ image_id }}"
        instance_profile_name: {{ IAMROLE }}
        user_data: "{{ lookup('file', 'scripts/user_data.sh') }}"
        termination_protection: yes
        wait: yes
        wait_timeout: 500
        exact_count: 1
        count_tag:
          Name: "{{ deploy_type }}.{{ dns_domain }}"
          role: webapp
          environment: "{{ deploy_type }}"
        instance_tags:
          Name: "{{ deploy_type }}.{{ dns_domain }}"
          role: webapp
          environment: "{{ deploy_type }}"
      register: ami_instance
    - name: Display AMI Instance Details
      debug:
        msg="{{ami_instance}}"
    - name: Add or Update Route53 entry
      route53:
        command: "create"
        zone: "{{ dns_domain }}"
        hosted_zone_id: "{{ dns_zone_id }}"
        private_zone: "true"
        record: "{{ deploy_type }}.{{ dns_domain }}"
        type: "A"
        ttl: 300
        value: "{{ ami_instance.tagged_instances[0].private_ip }}"
        overwrite: "yes"
      tags:
        - dns
  tags:
    - launch_ami
