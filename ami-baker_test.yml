- hosts: localhost
  connection: local
  gather_facts: False

  tasks:
  - name: Include the default variables and find ami
    include_vars: vars/ami-baker-defaults.yml

- name: fill in blank
  hosts: localhost
  remote_user: ec2-user
  connection: local
  gather_facts: False

  roles:
  - find_ami

  tasks:
  - name: launch temporary instance
    local_action:
      module: ec2
      assign_public_ip: yes
      region: "{{ region }}"
      key_name: "{{ key }}"
      group_id: "{{ ovc_security_groups }}"
      instance_type: "{{ instance_type }}"
      vpc_subnet_id: "{{ vpc_subnet_public }}"
      image: "{{ ami_find.results[0].ami_id }}"
      wait: yes
      instance_profile_name: CodeDeploy-EC2
      exact_count: 1
      count_tag:
        role: ami_builder
      instance_tags:
        role: ami_builder
        Name: ami_builder
    register: ami_instance

  - name: wait for ssh to come up
    wait_for: host={{ item.private_ip }} delay=90 port=22 state=started timeout=640
    with_items: ami_instance.instances

  - name: add host to group
    add_host: name={{ ami_instance.tagged_instances.0.private_ip }} groups=just_created

  - name: Add new Route53 entry
    route53:
      command: "create"
      zone: "preprod-int.ovchosting.co.uk"
      hosted_zone_id: "Z3M7I9GRTY3KIG"
      private_zone: "true"
      record: "preprod-pos.preprod-int.ovchosting.co.uk"
      type: "A"
      ttl: 7200
      value: "{{ item.private_ip }}"
      overwrite: yes
    with_items: ami_instance.instances

- hosts: just_created[0]
  remote_user: ec2-user
  become: yes
  become_user: root

  pre_tasks:
    - include_vars: vars/ami-baker-defaults.yml
  roles:
    - common
    - filebeat
    - jetty
    - oneview
    - install_customizations_tp
    - nginx_proxy
    - Datadog.datadog
    - datadog_config
 
  vars:
    datadog_api_key: "e4cbd7941e565adf937353883df89b2d"

- hosts: just_created[0]
  remote_user: ec2-user
  become: yes
  become_user: root

  name: Make some cake [REMOVE ME FOR 5.3]
  tasks:
    - name: Do a replace on the php -> cake
      lineinfile:
        dest: /var/www/html/ovcdashboard/app/Config/core.php
        regexp: ".*\'defaults\' => \'php\'"
        line: "        'defaults' => 'cake'"
        state: present
    - name: Add final block for bootstrap.php
      blockinfile:
        dest: /var/www/html/ovcdashboard/app/Config/bootstrap.php
        insertafter: EOF
        state: present
       content: |
          $dir = TMP.'sessions';
          if (!is_dir($dir)) {
            mkdir($dir, 0755, true);
          }
          if(is_writable($dir)){
            chmod($dir, 0755);
          }

- hosts: localhost
  connection: local

  tasks:
  - name: bundle ami
    local_action:
      module: ec2_ami
      instance_id: "{{ ami_instance.tagged_instances.0.id }}"
      region: "{{ region }}"
      state: present
      description: This was provisioned {{ ansible_date_time.iso8601 }}
      name: ovc-{{ ovc_version }}-{{ ansible_date_time.epoch }}
      wait: yes
    register: amioutput

#  - name: terminate temporary instance
#    local_action:
#      module: ec2
#      state: absent
#      region: "{{ region }}"
#      instance_ids: "{{ ami_instance.tagged_instances.0.id }}"

#  - name: debug
#    debug: var=amioutput

#  - name: create vars file with  new ami info
#    copy:
#     content: |
#            image_id: {{ amioutput.image_id }}
#            lc_suffix: {{ ansible_date_time.epoch }}
#     dest: vars/settings.yml
#     force: yes
     #become: yes
    # become_user: root
 #   when: deploy is defined and deploy|bool == True
