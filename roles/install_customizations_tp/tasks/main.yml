- name: Stop Jetty
  service:
    name: jetty
    state: stopped
  become: yes
  become_user: root

- name: Remove App-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/App-Data/tp-all" state=absent
  become: yes
  become_user: root

- name: Remove Shared-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Shared-Data/tp-all" state=absent
  become: yes
  become_user: root

- name: Remove Client-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Client-Data/tp-all" state=absent
  become: yes
  become_user: root

- name: Remove Server-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Server-Data/tp-all" state=absent
  become: yes
  become_user: root

- name: Remove ImportFiles
  file: path="{{ ovc_install_dir }}/Base-Location-Import-Files/tp-all" state=absent
  become: yes
  become_user: root

- name: Remove TP jars
  file: path="{{ item }}" state=absent
  with_fileglob:
    - "{{ jetty_dir }}/lib/ext/TP*"
  become: yes
  become_user: root

- name: Create OVC_Customizations
  file:
    path: "{{ ovc_install_dir }}/installFiles/OVC_Customizations"
    state: directory
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Download full zip file
  s3:
    bucket: "{{ s3_bucket_customer }}"
    object: "{{ s3_full_zip_prefix }}/{{ tp_extension_version }}/TPCustomPackage-{{ tp_extension_version }}.zip"
    dest: "/tmp/TPCustomPackage-{{ tp_extension_version }}.zip"
    mode: get
  when: s3_full_zip_prefix is defined and s3_full_zip_prefix != 'false'

- file:
    path: "/tmp/TPCustomPackage-{{ tp_extension_version }}/"
    state: directory

- name: Extract contents of zip file
  unarchive:
    src: "/tmp/TPCustomPackage-{{ tp_extension_version }}.zip"
    dest: "/tmp/TPCustomPackage-{{ tp_extension_version }}/"
    remote_src: True
  when: s3_full_zip_prefix is defined and s3_full_zip_prefix != 'false'

- name: Copy tpdata.tar.gz into the right place
  copy:
    src: "/tmp/TPCustomPackage-{{ tp_extension_version }}/OVC_Custom/tpdata.tar.gz"
    dest: "{{ ovc_server_user_dir }}/installFiles/tpdata.tar.gz"
    remote_src: True
  when: s3_full_zip_prefix is defined and s3_full_zip_prefix != 'false'

- name: Download tpdata.tar.gz from S3
  command: "aws s3 cp s3://{{ s3_bucket_customer }}/{{ ovc_version }}/tpdata.tar.gz {{ ovc_server_user_dir }}/installFiles/tpdata.tar.gz"
  when: s3install is defined and s3install and s3_full_zip_prefix is undefined and not s3_full_zip_prefix
  become: yes
  become_user: root

- name: Make jetty user own tpdata.tar.gz when downloaded from S3
  file:
    path: "{{ ovc_server_user_dir }}/installFiles/tpdata.tar.gz"
    mode: ug+rw
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_group_name }}"
  when: s3install is defined and s3install
  become: yes
  become_user: root

- name: Unarchive tpdata.tar.gz from S3
  unarchive:
    copy: no
    src: "{{ ovc_server_user_dir }}/installFiles/tpdata.tar.gz"
    dest: "{{ ovc_install_dir }}/installFiles/OVC_Customizations"
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_group_name }}"
  when: s3install is defined and s3install
  become: yes
  become_user: root

- name: Unarchive tpdata.tar.gz from local
  unarchive:
    src: tpdata.tar.gz
    dest: "{{ ovc_install_dir }}/installFiles/OVC_Customizations"
  when: s3install is not defined or not s3install
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy eCommerce Import Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/importFiles/eCommerceImportFiles/"
    dest: "{{ ovc_install_dir }}/Base-Location-Import-Files/ovc-all-OvcStore/eCommerceImportFiles"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy eCommerce Import Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/importFiles/eCommerceImportFiles/"
    dest: "{{ ovc_install_dir }}/Base-Location-Import-Files/ovc-all-OvcStore/eCommerceImportFiles"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy staffDiscountImportFiles Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/importFiles/staffDiscountImportFiles/"
    dest: "{{ ovc_install_dir }}/Base-Location-Import-Files/ovc-all-OvcStore/staffDiscountImportFiles"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy importRootLocations Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/importFiles/importRootLocations/"
    dest: "{{ ovc_install_dir }}/Base-Location-Import-Files/ovc-all-OvcStore/importRootLocations"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy Platform-Dynamic-Objects/config Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/deploy/config/uat/"
    dest: "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy customerData Files
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/customerData/"
    dest: "{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Delete Platform-Dynamic-Objects/temp
  file:
    path: "{{ ovc_install_dir }}/Platform-Dynamic-Objects/temp"
    state: absent
  become: yes
  become_user: root

- name: Copy system_configs.php to ovcdashboard
  synchronize:
    src: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/ovcdashboard/app/Config/system_configs.php"
    dest: "{{ html_root }}/ovcdashboard/app/Config/"
  delegate_to: "{{ inventory_hostname }}"
  become: yes
  become_user: "{{ webserver_user }}"

- name: Make system_configs.php owner {{ webserver_user }}
  file:
    path: "{{ html_root }}/ovcdashboard/app/Config/system_configs.php"
    owner: "{{ webserver_user }}"
    mode: 0777
  become: yes
  become_user: root

- name: Copy TPExtensions into the right place
  copy:
    src: "/tmp/TPCustomPackage-{{ tp_extension_version }}/OVC_Custom/TPExtensions-{{ tp_extension_version }}.jar"
    dest: "{{ ovc_install_dir }}/lib/ext/TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar"
    remote_src: True
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_user_login }}"
    mode: 0644
  when: s3_full_zip_prefix is defined and s3_full_zip_prefix != 'false'

- name: Copy TPPopulators into the right place
  copy:
    src: "/tmp/TPCustomPackage-{{ tp_extension_version }}/OVC_Custom/TPPopulators-{{ tp_extension_version }}.jar"
    dest: "{{ ovc_install_dir }}/lib/ext/TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar"
    remote_src: True
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_user_login }}"
    mode: 0644
  when: s3_full_zip_prefix is defined and s3_full_zip_prefix != 'false'

- name: Download TPExtensions from S3
  command: "aws s3 cp s3://{{ s3_bucket_customer }}/{{ ovc_version }}/TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar {{ ovc_install_dir }}/lib/ext/TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar"
  when: s3install is defined and s3install and s3_full_zip_prefix is undefined and not s3_full_zip_prefix
  become: yes
  become_user: jetty

- name: Download TPPopulators from S3
  command: "aws s3 cp s3://{{ s3_bucket_customer }}/{{ ovc_version }}/TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar {{ ovc_install_dir }}/lib/ext/TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar"
  when: s3install is defined and s3install and s3_full_zip_prefix is undefined and not s3_full_zip_prefix
  become: yes
  become_user: jetty

- name: Copy TPExtensions Jar to jetty
  copy:
    src: "TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar"
    dest: "{{ ovc_install_dir }}/lib/ext/TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar"
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_user_login }}"
    mode: 0644
  when: s3install is not defined or not s3install
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Copy TPPopulators Jar to jetty
  copy:
    src: "TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar"
    dest: "{{ ovc_install_dir }}/lib/ext/TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar"
    owner: "{{ jetty_user_login }}"
    group: "{{ jetty_user_login }}"
    mode: 0644
  when: ((s3install is not defined) or (s3install == false))
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Update Jetty context.xml to include TPExtensions and TPPopulators
  lineinfile:
    dest: "{{ jetty_dir }}/webapps/context.xml"
    insertafter: '<Set name="overrideDescriptor">.*'
    line: '<Set name="extraClasspath">{{ ovc_install_dir }}/lib/ext/TPExtensions-{{ tp_extension_version | default(5.4.0) }}.jar;{{ ovc_install_dir }}/lib/ext/TPPopulators-{{ tp_extension_version | default(5.4.0) }}.jar</Set>'
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Edit Jetty start.ini to add plus module
  lineinfile:
    dest: "{{ jetty_dir }}/start.ini"
    line: "--module=plus"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Add configurations to jettys start.ini
  lineinfile:
    dest: "{{ jetty_dir}}/start.ini"
    state: present
    line: "{{ item.line }}"
  with_items:
    - { line: '-Dovc.tempfiles.cleanup=true'}
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Edit Jetty start.ini to add ext module
  lineinfile:
    dest: "{{ jetty_dir }}/start.ini"
    line: "--module=ext"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Edit tools.properties
  lineinfile:
    dest: "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config/tools.properties"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
    - { regexp: '^staffDiscount.protocol=.*', line: 'staffDiscount.protocol={{staffDiscount_protocol | default("https")}}' }
    - { regexp: '^staffDiscount.region=.*', line: 'staffDiscount.region={{staffDiscount_region | default("eu-west-1")}}' }
    - { regexp: '^staffDiscount.bucketName=.*', line: 'staffDiscount.bucketName={{staffDiscount_bucketName}}' }
    - { regexp: '^posMClientSyncUpdater.store.*', line: 'posMClientSyncUpdater.store=All' }
    - { regexp: '^ovcServer.customer-all.*', line: 'ovcServer.customer-all=tp-all' }
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Update unifiedconfig.properties to include hybris OCC configs
  lineinfile:
    dest: "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config/unifiedConfig.properties"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^export.products.url=.*', line: 'export.products.url=v2/%s/ovc/products/paginated' }
    - { regexp: '^catalogs.url=.*', line: 'catalogs.url=/v2/%s/ovc/merchandisingGroups/All' }
    - { regexp: '^stores.url=.*', line: 'stores.url=/v2/%s/ovc/locations/All' }
    - { regexp: '^export.stock.url=.*', line: 'export.stock.url=v2/%s/ovc/storestock/%s' }
    - { regexp: '^ecommerce.fromServer.occ.type=.*', line: 'ecommerce.fromServer.occ.type=1' }
    - { regexp: '^oAuth.required=.*', line: 'oAuth.required=false' }
    - { regexp: '^products.import.pageSize=.*', line: 'products.import.pageSize=1500' }
    - { regexp: '^others.import.pageSize=.*', line: 'others.import.pageSize=1500' }
    - { regexp: '^secure.occhost.context=.*', line: 'secure.occhost.context=/omnicommercewebservices' }
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Create initDevAll.sh
  command: "cp initOVCServer.sh initDevAll.sh"
  args:
    chdir: "{{ ovc_install_dir }}/bin"
    creates: "{{ ovc_install_dir }}/bin/initDevAll.sh"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Set initDevAll.sh to run devAll
  replace:
    dest: "{{ ovc_install_dir }}/bin/initDevAll.sh"
    regexp: "eComInit"
    replace: "devAll"
    backup: no
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Create eComRefresh.sh
  command: "cp initOVCServer.sh eComRefresh.sh"
  args:
    chdir: "{{ ovc_install_dir }}/bin"
    creates: "{{ ovc_install_dir }}/bin/eComRefresh.sh"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Set eComRefresh.sh to run eComRefresh
  replace:
    dest: "{{ ovc_install_dir }}/bin/eComRefresh.sh"
    regexp: "eComInit"
    replace: "eComRefresh"
    backup: no
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Create initStaffDiscount.sh
  command: "cp initOVCServer.sh initStaffDiscount.sh"
  args:
    chdir: "{{ ovc_install_dir }}/bin"
    creates: "{{ ovc_install_dir }}/bin/initStaffDiscount.sh"
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Set initStaffDiscount.sh to run staffData
  replace:
    dest: "{{ ovc_install_dir }}/bin/initStaffDiscount.sh"
    regexp: "eComInit"
    replace: "staffData"
    backup: no
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Cleanup MIME files via devAll
  lineinfile:
    dest: "{{ ovc_install_dir }}/bin/initDevAll.sh"
    line: 'find /tmp/ -type f -name "MIME*" -exec rm {} \;'
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Cleanup initialDB files via devAll
  lineinfile:
    dest: "{{ ovc_install_dir }}/bin/initDevAll.sh"
    line: 'find /tmp/ -type f -name "initialDB*" -exec rm {} \;'
  become: yes
  become_user: "{{ jetty_user_login }}"

- name: Stat if there are tp-alters
  stat:
    path: "{{ ovc_install_dir }}/installFiles/OVC_Customizations/customerData/sql/tp-alters-{{ ovc_version | regex_replace('\\.', '') }}-mysql.sql"
  register: custom_db_script

# WORKS
- name: Import TP SQL
  shell: "mysql -u {{ ovcDB_username }} -p{{ ovcDB_password }} -h {{ ovcDB_host }} {{ ovcDB_db }} < {{ custom_db_script.stat.path }}"
  tags:
    - import_custom_db
  when: custom_db_script.stat.exists == True
  register: custom_db_import_result

- name: Copy TPs custom CA cert
  copy:
    src: tp_int_ca3.cer
    dest: /etc/tp_int_ca3.cer
    owner: root
    group: root
    mode: 0644
  become: yes
  become_user: root

- name: Add CA to the Java cacerts
  command: keytool -keystore /etc/pki/java/cacerts -importcert -alias tp_int_ca3 -file /etc/tp_int_ca3.cer -noprompt -storepass changeit
  become: yes
  become_user: root

- debug: var=custom_db_import_result

- name: Start Jetty
  service:
    name: jetty
    state: started
  tags:
    - startjetty
  become: yes
  become_user: root

- name: Initialize OneView Server
  shell: "{{ ovc_install_dir }}/bin/initDevAll.sh"
  become: yes
  become_user: jetty
  register: initilization
  async:  6000
  tags:
    - importers
    - tpimporters
  notify: Restart Jetty

- debug: var=initilization

- name: Restart Jetty
  service:
    name: jetty
    state: restarted
  tags:
    - startjetty
  become: yes
  become_user: root
