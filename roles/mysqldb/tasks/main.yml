---
# This playbook will install mysql and create db user and give permissions.

- name: Add MySQL community repo to CentOS7, CentOS6 has MySQL natively
  yum: name=http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm state=present
  become: yes
  become_user: root
  when: ansible_distribution == "CentOS" and ansible_lsb.major_release|int >= 7
  tags:
    - db

- name: Check to see if we have a non-RPM install of MySQL-python
  stat: path=/usr/lib64/python2.7/site-packages/MySQL_python-1.2.3-py2.7-linux-x86_64.egg
  register: mysql_python_src_installed
  tags:
    - db

- name: Remove MySQL-python before installing again
  yum: name=MySQL-python state=removed
  when: mysql_python_src_installed.stat.exists == True
  become: yes
  become_user: root
  tags:
    - db

- name: Remove tracers of MySQL-python in case it was installed outside of rpm
  file:
    path="{{ item }}"
    state=absent
  with_items:
#    - /usr/lib64/python-2.7/site-packages/MySQLdb/
    - /usr/lib64/python2.7/site-packages/MySQL_python-1.2.3-py2.7-linux-x86_64.egg
    - /usr/lib64/python2.7/site-packages/MySQL_python-1.2.3-py2.7.egg-info
  become: yes
  become_user: root
  tags:
    - db

- name: Install MySQL packages for CentOS
  yum: name={{ item }} state=installed
  with_items:
   - mysql-server
   - MySQL-python
  become: yes
  become_user: root
  when: ansible_distribution == "CentOS"
  tags:
    - db

- name: Install MySQL packages for Amazon
  yum: name={{ item }} state=installed
  with_items:
   - mysql-server
   - MySQL-python27
  become: yes
  become_user: root
  when: ansible_distribution == "Amazon"
  tags:
    - db

- name: Create Mysql configuration file
  template: src=my.cnf.j2 dest=/etc/my.cnf
  notify:
  - restart mysql
  become: yes
  become_user: root
  tags:
    - db

- name: Start Mysql Service
  service: name=mysqld state=started enabled=yes
  become: yes
  become_user: root
  tags:
    - db

    # 'localhost' needs to be the last item for idempotency, see
    # http://ansible.cc/docs/modules.html#mysql-user


- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - 38.122.253.250
   - ::1
   - localhost
  when: ansible_hostname != 'localhost'
  become: yes
  become_user: root
  tags:
    - db

- name: update mysql root password for all root accounts
  become: yes
  become_user: root
  mysql_user:
      name: root
      host: "{{ item }}"
      password: "{{ mysql_root_password }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
      check_implicit_admin: yes
      priv: "*.*:ALL,GRANT"
  with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - 38.122.253.250
      - ::1
      - localhost
  tags:
    - db

- name: Copy .my.cnf file with root password credentials
  template: src=root/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
  become: yes
  become_user: root
  tags:
    - db

#- name: delete anonymous MySQL server user for localhost
#  action: mysql_user user="" state="absent"
#  become: yes
#  become_user: root

- name: remove the MySQL test database
  action: mysql_db db=test state=absent
  become: yes
  become_user: root
  tags:
    - db

# - name: Create Application DB User
  # mysql_user: name={{ mysql_user }} password={{ mysql_root_password }} priv=*.*:ALL host=localhost state=present
  # become: yes
  # become_user: root
