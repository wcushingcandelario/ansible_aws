---
# This playbook will install mysql and create db user and give permissions.

- name: Install MySQL on CentOS
  yum: name=http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm state=present
  sudo: yes
  when: ansible_os_family == "CentOS"

- name: Install MySQL packages
  yum: name={{ item }} state=installed
  with_items:
   - mysql-server
   - MySQL-python
   - libselinux-python
   - libsemanage-python
  sudo: yes

- name: Install MySQL-python Dependencies for Amazon AMI
  action: yum name={{ item }}
  with_items:
        - mysql-devel
        - python-devel
        - gcc
  when: ansible_os_family == "RedHat"
  sudo: yes

- name: Create MySQL-python directory
  file: state=directory path=/home/ec2-user/MySQL
  when: ansible_os_family == "RedHat"

- stat: path=/home/ec2-user/MySQL/MySQL-python-1.2.5.zip
  register: mysql_python_package

- name: Download MySQL-python
  get_url: url="https://pypi.python.org/packages/source/M/MySQL-python/MySQL-python-1.2.5.zip" dest=/home/ec2-user/MySQL/MySQL-python-1.2.5.zip
  when: ansible_os_family == "RedHat" and mysql_python_package.stat.exists != true

- name: Unzip MySQL-python
  unarchive: src=/home/ec2-user/MySQL/MySQL-python-1.2.5.zip dest=/home/ec2-user/MySQL copy=no
  when: ansible_os_family == "RedHat" and mysql_python_package.stat.exists != true
  sudo: yes

- name: Build MySQL-python
  command: python setup.py build
  args:
        chdir: /home/ec2-user/MySQL/MySQL-python-1.2.5
  when: ansible_os_family == "RedHat" and mysql_python_package.stat.exists != true
  sudo: yes

- name: Install MySQL-python
  command: python setup.py install
  args:
        chdir: /home/ec2-user/MySQL/MySQL-python-1.2.5
  when: ansible_os_family == "RedHat" and mysql_python_package.stat.exists != true
  sudo: yes

- name: Create Mysql configuration file
  template: src=my.cnf.j2 dest=/etc/my.cnf
  notify:
  - restart mysql
  sudo: yes

- name: Start Mysql Service
  service: name=mysqld state=started enabled=yes
  sudo: yes

    # 'localhost' needs to be the last item for idempotency, see
    # http://ansible.cc/docs/modules.html#mysql-user


- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - 38.122.253.250
   - ::1
   - localhost
  when: ansible_hostname != 'localhost'
  sudo: yes

- name: update mysql root password for all root accounts
  sudo: yes
  mysql_user:
      name: root
      host: "{{ item }}"
      password: "{{ mysql_root_password }}"
      login_user: root
      login_password: "{{ mysql_root_password }}"
      check_implicit_admin: yes
      priv: "*.*:ALL,GRANT"
  with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - 38.122.253.250
      - ::1
      - localhost

- name: Copy .my.cnf file with root password credentials
  template: src=root/my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600
  sudo: yes

#- name: delete anonymous MySQL server user for localhost
#  action: mysql_user user="" state="absent"
#  sudo: yes

- name: remove the MySQL test database
  action: mysql_db db=test state=absent
  sudo: yes

# - name: Create Application DB User
  # mysql_user: name={{ mysql_user }} password={{ mysql_root_password }} priv=*.*:ALL host=localhost state=present
  # sudo: yes
