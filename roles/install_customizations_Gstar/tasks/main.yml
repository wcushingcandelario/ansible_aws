- name: Stop Jetty
  service:
    name: jetty
    state: stopped
  become: yes
  become_user: root

- name: Remove App-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/App-Data/{{ custom_data_name }}" state=absent
  become: yes
  become_user: root

- name: Remove Shared-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Shared-Data/{{ custom_data_name }}" state=absent
  become: yes
  become_user: root

- name: Remove Client-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Client-Data/{{ custom_data_name }}" state=absent
  become: yes
  become_user: root

- name: Remove Server-Data
  file: path="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Server-Data/{{ custom_data_name }}" state=absent
  become: yes
  become_user: root

- name: Remove ImportFiles
  file: path="{{ ovc_install_dir }}/Base-Location-Import-Files/{{ custom_data_name }}" state=absent
  become: yes
  become_user: root

- name: Unarchive Custom Data
  unarchive: src=customdata.tar.gz
             dest="{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale"
  become: yes
  become_user: root

- name: Unarchive Import Files
  unarchive: src=importfiles.tar.gz
             dest="{{ ovc_install_dir }}/Base-Location-Import-Files"
  become: yes
  become_user: root

- name : Create temp directory
  file:
    path: "{{ ovc_install_dir }}/TEMP"
    state: directory
    mode: 0775 
  become: yes
  become_user: root

#- name: Unarchive Config Files
#  unarchive: src=configs.tar.gz
#             dest="{{ ovc_install_dir }}/TEMP"
#  become: yes
#  become_user: root

#- name: Copy appDataRegistry.config file
#  command:  cp "{{ ovc_install_dir }}/TEMP/dev/appDataRegistry.config" "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config/appDataRegistry.config"
#  become: yes
#  become_user: root
- name: Copy appDataRegistry.config file
  copy:
    src: appDataRegistry.config
    dest: "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config/appDataRegistry.config"
    owner: jetty
    group: jetty
  become: yes
  become_user: root

- name: Copy occHybrisConfig.ovccfg file
  copy:
    src: occHybrisConfig.ovccfg
    dest: "{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Server-Data/Gstar-grp-all/config/posMServer/occHybrisConfig.ovccfg"
    owner: jetty
    group: jetty
  become: yes
  become_user: root


#- name: Copy locationGroupMapping.ovccfg file
#  command: cp "{{ ovc_install_dir }}/TEMP/dev/locationGroupMapping.ovccfg" "{{ ovc_install_dir }}/Application-Dynamic-Objects/Point-Of-Sale/Server-Data/Client-grp-all/config/posMServer/locationGroupMapping.ovccfg"
#  become: yes
#  become_user: root

#- name: Copy tools.properties file
#  command: cp "{{ ovc_install_dir }}/TEMP/dev/tools.properties" "{{ ovc_install_dir }}/Platform-Dynamic-Objects/config/tools.properties"
#  become: yes
#  become_user: root

#- name: Copy Tools jar to lib dir
#  copy:
#    src: POSMClient-Tools-DT-5.0.0.jar
#    dest: "{{ ovc_install_dir }}/lib"
#  become: yes
#  become_user: root


- name: Copy devAll script
  copy:
    src: initOVCServer.sh
    dest: "{{ ovc_install_dir }}/bin/initOVCServer.sh"
    owner: jetty
    group: jetty
  become: yes
  become_user: root

#- name: Copy Tools jar to posWebapp
#  copy:
 #   src: POSMClient-Tools-DT-5.0.0.jar
#    dest: "{{ ovc_install_dir }}/posWebapp/WEB-INF/lib"
#  become: yes
#  become_user: root

- name: Make Custom Data owned by Jetty
  file:
    owner: jetty
    group: jetty
    path: /opt/ovc
  become: yes
  become_user: root

# Dumps all databases to hostname.sql
- name: Backup DB
  mysql_db:
    state: dump
    name: xdb
    target: /opt/ovc/xdb_back.sql
    login_user: root
    login_password: root
  become: yes
  become_user: root

- name: Import DB
  mysql_db:
    state: import
    name: xdb
    target: /home/ec2-user/MySQL/xdb_GStar.sql
    login_user: root
    login_password: root
  become: yes
  become_user: root

- name: Executing clob tbl truncate
  command: mysql -u root -proot xdb -e "truncate table xdb.clob_tbl"
  become: yes
  become_user: root

- name: Start Jetty
  service:
    name: jetty
    state: started
  become: yes
  become_user: root

- name: Remove temp Hash File
  file: path="{{ ovc_install_dir }}/Platform-Dynamic-Objects/temp/" state=absent
  become: yes
  become_user: root


- name: Run init script
  command: sh initOVCServer.sh
  args:
      chdir: "{{ ovc_install_dir }}/bin/"
  become: yes
  become_user: root
