- set_fact:
    ami_temp_name: "ovc-{{ ovc_version }}-{{ ansible_date_time.epoch }}-temp"
    ami_name: "ovc-{{ ovc_version }}-{{ ansible_date_time.epoch }}"

- name: Bundle AMI
  local_action:
    module: ec2_ami
    instance_id: "{{ just_created_instance_id }}"
    region: "{{ ami_baker_region }}"
    state: present
    description: This was provisioned {{ ansible_date_time.iso8601 }}
    name: "{{ ami_name }}"
    wait: yes
    wait_timeout: 1500
    launch_permissions:
      user_ids: ['748109554602', "{{ customer_account_id }}"]
    tags:
      customer: "{{ ami_customer }}"
      release: "{{ ami_release }}"
      source: "{{ source_ami }}"
      git_sha: "{{ ovc_git_sha }}"
      git_branch: "{{ ovc_circle_branch }}"
  register: amioutput

- name: debug
  debug: var=amioutput

- name: wait for ssh to come up
  wait_for:
    host: "{{ ssh_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640

- name: Copy AMI - Temporary name for copying/booting
  ec2_ami_copy:
    source_region: "{{ ami_baker_region }}"
    region: "{{ ami_target_region }}"
    source_image_id: "{{ amioutput.image_id }}"
    wait: yes
  register: amicopy
  when: ami_target_region !=  ami_baker_region

- name: debug
  debug: var=amicopy
  when: ami_target_region != ami_baker_region

- name: Tag AMI
  shell:
    cmd: "aws ec2 create-tags  --region {{ ami_target_region }} --resources {{ amicopy.image_id }} --tags 'Key=customer,Value={{ ami_customer }} Key=release,Value={{ ami_release }} Key=source,Value={{ source_ami }}' Key=git_sha,Value={{ ovc_git_sha }} Key=git_branch,Value={{ ovc_circle_branch }}"
  when: ami_target_region !=  ami_baker_region

- name: Share AMI with customer account
  shell:
    cmd: "aws ec2 modify-image-attribute --image-id ami-5731123e --launch-permission '{\'Add\': [{\'UserId\':\'{{ customer_account_id }}\'}]}'"
  when: ami_target_region !=  ami_baker_region

- name: Set image_id
  set_fact:
    image_id: "{{ amioutput.image_id }}"
  when: amioutput.image_id is defined
