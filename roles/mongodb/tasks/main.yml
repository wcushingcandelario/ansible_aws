---
# This playbook will install MongoDB.

- name: Setup MongoDB YUM repo
  copy:
    src: mongodb-org-3.2.repo.amazon
    dest: /etc/yum.repos.d/mongodb-org-3.2.repo
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == 'Amazon'
  become: yes
  become_user: root

- name: Setup MongoDB YUM repo
  copy:
    src: mongodb-org-3.2.repo.centos
    dest: /etc/yum.repos.d/mongodb-org-3.2.repo
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == 'CentOS'
  become: yes
  become_user: root

- name: Install MongoDB packages
  yum:
    name: mongodb-org-3.2.3
    state: present
  become: yes
  become_user: root

- name: Install pyMongo
  pip:
    name: pymongo
  become: yes
  become_user: root

- name: Start MongoDB
  service:
    name: mongod
    state: started
    enabled: yes
  become: yes
  become_user: root
#
# - name: Create MongoDB Admin User
#   mongodb_user:
#     database: admin
#     name: siteUserAdmin
#     password: password
#     roles: userAdminAnyDatabase
#     state: present
#
# - name: Create MongoDB User
#   mongodb_user:
#     database: '{{ mongodb_database | default("xdb") }}'
#     name: '{{ mongodb_user | default("root") }}'
#     password: '{{ mongodb_password | default("root") }}'
#     roles: dbOwner
#     state: present

- name: Check for Mongo Setup file
  stat: path=/opt/setAuth.js
  register: setAuth

- name: Copy Mongo Auth Setup
  copy:
    src: setAuth.js
    dest: /opt/setAuth.js
    owner: root
    group: root
    mode: 0644
  when: not setAuth.stat.exists
  become: yes
  become_user: root

- name: Run DB setup script
  shell: 'mongo < /opt/setAuth.js'
  register: output
  when: not setAuth.stat.exists
  become: yes
  become_user: root

- name: Drop existing database
  command: "mongo xdb -u root -p root --eval 'db.dropDatabase()'"
  tags:
    - dropdb
  when: setAuth.stat.exists

- name: Print auth setup
  debug:
    var: output
  when: not setAuth.stat.exists

- name: Update Mongod.conf
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
  become: yes
  become_user: root
#
# - name: Delete Mongo Auth Setup
#   file:
#     path: /opt/setAuth.js
#     state: absent
#   become: yes
#   become_user: root

- name: Restart Mongod
  service:
    name: mongod
    state: restarted
  become: yes
  become_user: root
