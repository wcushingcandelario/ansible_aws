- name: Launch instance
  ec2:
    assign_public_ip: yes
    region: "{{ region }}"
    key_name: "{{ key }}"
    group_id: "{{ _security_group }}"
    instance_type: "{{ instance_type }}"
    #vpc_subnet_id: "{{ vpc_subnet_id }}"
    vpc_subnet_id: " {{ _subnet_id }}"
    image: "{{ image_id }}"
    instance_profile_name: "{{ IAMROLE }}"
    user_data: "{{ _user_data }}"
    termination_protection: "{{ termination_protection }}"
    instance_initiated_shutdown_behavior: "{{ instance_initiated_shutdown_behavior }}"
    wait: yes
    wait_timeout: 500
    volumes:
      - device_name: /dev/xvda
        volume_size: 100
        delete_on_termination: "{{ delete_on_termination }}"
#        encrypted: "{{ encrypt_instance }}"
    exact_count: "{{ launch_exact_count }}"
    count_tag:
      Name: "{{ launch_tag_name }}"
      role: "{{ launch_tag_role }}"
      environment: "{{ deploy_type }}"
      git_sha: "{{ ovc_git_sha }}"
    instance_tags:
      Name: "{{ launch_tag_name }}"
      role: "{{ launch_tag_role }}"
      environment: "{{ deploy_type }}"
      git_sha: "{{ ovc_git_sha }}"
  register: ami_instance

- debug: var=ami_instance.tagged_instances.0

- name: Add host to group mongo_hosts (Public IPs)
  add_host:
    name: "{{ item.public_ip }}"
    groups: mongo_hosts
  when: ami_instance.tagged_instances is defined and launch_tag_role == 'mongo' and use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"

- name: Add host to group mongo_hosts (Private IPs)
  add_host:
    name: "{{ item.private_ip }}"
    groups: mongo_hosts
  when: ami_instance.tagged_instances is defined and launch_tag_role == 'mongo' and not use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"


- name: Wait for SSH to come up on launched hosts (Public IPs)
  wait_for:
    host: "{{ item.public_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: "{{ ami_instance.tagged_instances }}"
  when: ami_instance.tagged_instances is defined and use_public_ip

- name: Wait for SSH to come up on launched hosts (Private IPs)
  wait_for:
    host: "{{ item.private_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: "{{ ami_instance.tagged_instances }}"
  when: ami_instance.tagged_instances is defined and not use_public_ip

- name: Display AMI Instance Details
  debug:
    msg="{{ami_instance}}"

- name: Add host to group launch_instance_hosts (Public IPs)
  add_host:
    name: "{{ item.public_ip }}"
    groups: launch_instance_hosts
  when: ami_instance.tagged_instances is defined and use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"

- name: Add host to group launch_instance_hosts (Private IPs)
  add_host:
    name: "{{ item.private_ip }}"
    groups: launch_instance_hosts
  when: ami_instance.tagged_instances is defined and not use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"

- name: Wait for SSH to come up on launched hosts (Public IPs)
  wait_for:
    host: "{{ item.public_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: "{{ ami_instance.tagged_instances }}"
  when: ami_instance.tagged_instances is defined and use_public_ip

- name: Wait for SSH to come up on launched hosts (Private IPs)
  wait_for:
    host: "{{ item.private_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: "{{ ami_instance.tagged_instances }}"
  when: ami_instance.tagged_instances is defined and not use_public_ip
