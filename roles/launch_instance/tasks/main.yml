- name: Launch instance
  ec2:
    assign_public_ip: yes
    region: "{{ region }}"
    key_name: "{{ key }}"
    group_id: "{{ mongo_security_group }}"
    instance_type: "{{ instance_type }}"
    #vpc_subnet_id: "{{ vpc_subnet_id }}"
    vpc_subnet_id: " {{ mongo_subnet_id }}"
    image: "{{ image_id }}"
    instance_profile_name: "{{ IAMROLE }}"
    user_data: "{{ lookup('file', 'scripts/user_data_mongo.sh') }}"
    termination_protection: yes
    wait: yes
    wait_timeout: 500
    volumes:
      - device_name: /dev/xvda
        volume_size: 100
#        encrypted: "{{ encrypt_instance }}"
    exact_count: "{{ launch_exact_count }}"
    count_tag:
      Name: "{{ launch_tag_name }}"
      role: "{{ launch_tag_role }}"
      environment: "{{ deploy_type }}"
    instance_tags:
      Name: "{{ launch_tag_name }}"
      role: "{{ launch_tag_role }}"
      environment: "{{ deploy_type }}"
  register: ami_instance

- name: Set Mongo IP fact (public)
  set_fact:
    mongo_ip_public: "{{ ami_instance.tagged_instances.0.public_ip }}"
  when: launch_tag_role == 'mongo'

- name: Add host to group mongo_hosts
  add_host:
    name: "{{ mongo_ip_public }}"
    groups: mongo_hosts
  when: ami_instance.tagged_instances is defined and launch_tag_role == 'mongo'

- name: wait for ssh to come up on mongo host
  wait_for: host={{ mongo_ip_public }} delay=30 port=22 state=started timeout=640
  with_items: ami_instance.tagged_instances

- name: Display AMI Instance Details
  debug:
    msg="{{ami_instance}}"

- name: Set IP fact (public).
  set_fact:
    ssh_ip_public: "{{ ami_instance.tagged_instances.0.public_ip }}"
  when: use_public_ip and launch_tag_role != 'mongo'

- name: wait for ssh to come up
  wait_for: host={{ ssh_ip_public }} delay=30 port=22 state=started timeout=640
  with_items: ami_instance.instances
  when: launch_tag_role != 'mongo'

- name: Add or Update Route53 entry
  route53:
    command: "create"
    zone: "{{ dns_domain }}"
    hosted_zone_id: "{{ dns_zone_id }}"
    private_zone: "true"
    record: "{{ deploy_type }}.{{ dns_domain }}"
    type: "A"
    ttl: 300
    value: "{{ ami_instance.tagged_instances[0].private_ip }}"
    overwrite: "yes"
  when: ami_instance.tagged_instances is defined and launch_tag_role == 'webapp'
  tags:
    - dns
