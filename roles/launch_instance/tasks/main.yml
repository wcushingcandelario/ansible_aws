- name: Launch instance
  ec2:
    assign_public_ip: yes
    region: "{{ region }}"
    key_name: "{{ key }}"
    group_id: "{{ group_id }}"
    instance_type: "{{ instance_type_single }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    image: "{{ image_id }}"
    instance_profile_name: "{{ IAMROLE }}"
    user_data: "{{ lookup('template', 'scripts/user_data.sh.j2') }}"
    termination_protection: yes
    wait: yes
    wait_timeout: 500
    volumes:
      - device_name: /dev/xvda
        volume_size: 100
#        encrypted: "{{ encrypt_instance }}"
    exact_count: 1
    count_tag:
      Name: "{{ deploy_type }}.{{ dns_domain }}"
      role: "{{ role_tag }}"
      environment: "{{ deploy_type }}"
    instance_tags:
      Name: "{{ deploy_type }}.{{ dns_domain }}"
      role: "{{ role_tag }}"
      environment: "{{ deploy_type }}"
  register: ami_instance

- name: Display AMI Instance Details
  debug:
    msg="{{ami_instance}}"

- name: Add host to group launch_instance_hosts (Public IPs)
  add_host:
    name: "{{ item.public_ip }}"
    groups: launch_instance_hosts
  when: ami_instance.tagged_instances is defined and use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"

- name: Add host to group launch_instance_hosts (Private IPs)
  add_host:
    name: "{{ item.private_ip }}"
    groups: launch_instance_hosts
  when: ami_instance.tagged_instances is defined and not use_public_ip
  with_items: "{{ ami_instance.tagged_instances }}"

- name: Wait for SSH to come up on launched hosts (Public IPs)
  wait_for:
    host: "{{ item.public_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: "{{ ami_instance.tagged_instances }}"
  when: ami_instance.tagged_instances is defined and use_public_ip

- name: Wait for SSH to come up on launched hosts (Private IPs)
  wait_for:
    host: "{{ item.private_ip }}"
    delay: 30
    port: 22
    state: started
    timeout: 640
  with_items: ami_instance.tagged_instances
  when: ami_instance.tagged_instances is defined and not use_public_ip
