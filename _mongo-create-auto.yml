---

- name: create LC
  hosts: localhost
  connection: local
  gather_facts: False

  tasks:
  - name: create launch config
    local_action:
      module: ec2_lc
      name: "{{ new_lc_name }}-mongo"
      image_id: "{{ image_id }}"
      key_name: "{{ key }}"
      region: "{{ region }}"
      security_groups: "{{ mongo_security_groups }}"
      instance_type: "{{ mongo_instance_type }}"
      instance_monitoring: yes
      assign_public_ip: yes
      instance_profile_name: "{{ IAMROLE }}"
# Note
#    Lookups are executed with a cwd relative to the role or play, as opposed to
#   local tasks which are executed with the cwd of the executed script.
# http://docs.ansible.com/ansible/playbooks_lookups.html
      user_data: "{{ lookup('file', 'scripts/mongo_user_data.sh') }}"
    register: debuglaunch

  - name: ovc_security_groups
    debug: "var=ovc_security_groups"


  - name: debug script copy
    debug: "var=debuglaunch"


  - name: create auto scaling group
    local_action:
      module: ec2_asg
      name: "{{ asg_name }}"
      launch_config_name: "{{ new_lc_name }}-mongo"
      vpc_zone_identifier: "{{ elbsubnets }}"
      load_balancers: "{{ deploy_type }}-mongo"
      replace_all_instances: yes
      health_check_type: ELB
      min_size: 3
      max_size: 5
      wait_timeout: 1200
      desired_capacity: 2
      region: "{{ region }}"
      tags:
        - Name: "{{ deploy_type }}-mongo"
        - monitor: true
        - environment: "{{ deploy_type }}"
        - role: mongo
    register: asglaunch

  - name: debug auto scaling update
    debug: "var=asglaunch"

  - name: Create ELB Mongo
    local_action:
      module: ec2_elb_lb
      name: "{{ deploy_type }}-mongo"
      state: present
      region: "{{ region }}"
      scheme: internal
      connection_draining_timeout: 120
      idle_timeout: 300
      subnets: "{{ elbsubnets }}"
      security_group_ids: "{{ security_group_ids }}"
      stickiness:
        type: loadbalancer
        enabled: yes
        expiration: 300
      health_check:
        ping_protocol: tcp # options are http, https, ssl, tcp
        ping_port: 22
        response_timeout: 5 # seconds
        interval: 30 # seconds
        unhealthy_threshold: 2
        healthy_threshold: 10
  #      access_logs:
  #        interval: 5 # minutes (defaults to 60)
  #        s3_location: "sglogs" # This value is required if access_logs is set
  #        s3_prefix: "{{ deploy_type }}ELBlogs"
    register: elb_new

  - name: debug elb create
    debug: "var=elb_new"

  - name: Get ELB details after creation
    local_action:
      module: ec2_elb_facts
      names:
        - "{{ deploy_type }}-mongo"
      region: "{{ region }}"
    register: elb_facts

  - name: Add new Route53 entry
    route53:
      command: "create"
      zone: "{{ dns_domain }}"
      hosted_zone_id: "{{ dns_zone_id }}"
      private_zone: "true"
      record: "{{ deploy_type }}-mongo.{{ dns_domain }}"
      type: "CNAME"
      ttl: 300
      value: "{{ elb_facts.elbs.0.dns_name }}"
      overwrite: yes
